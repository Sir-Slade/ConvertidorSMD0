
import convertidorsmd0.Convertidor;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileFilter;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * SMDEditMain.java
 *
 * Created on 25/04/2014, 09:42:51 PM
 */

/**
 *
 * @author Jeshua
 */
public class SMDEditMain extends javax.swing.JFrame {

    JFileChooser jcText = new JFileChooser();//Cuadro de diálogo para archivos .smde
    JFileChooser jcSMD = new JFileChooser();//Cuadro de diálogo para archivos .SMD

    Convertidor c;

    public SMDEditMain() {
        initComponents();
        c = new Convertidor();

        //Se crean los "Extension filter" para filtrar el tipo de archivo que se ve en el JFileChooser
        FileNameExtensionFilter smde = new FileNameExtensionFilter("Archivo fuente", "smde");
        FileNameExtensionFilter smd = new FileNameExtensionFilter("Archivo SMD", "SMD");
        jcText.addChoosableFileFilter(smde);
        jcText.setFileFilter(smde);
        jcSMD.addChoosableFileFilter(smd);
        jcSMD.setFileFilter(smd);

    }

    //Método para cambiar el ícono a uno personalizado
    @Override
    public Image getIconImage(){
        Image icon = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("convertidorsmd0/icon.png"));
        return icon;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SMDEditor 1.0");
        setIconImage(getIconImage());

        jButton1.setText("Abrir SMD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Guardar Texto");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Compilar archivo externo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton4.setText("Salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Abrir Texto");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Guardar y Compilar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jButton4))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addContainerGap())
        );

        pack();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = getSize();
        setLocation((screenSize.width-dialogSize.width)/2,(screenSize.height-dialogSize.height)/2);
    }// </editor-fold>//GEN-END:initComponents

    //Método para botón de "Abrir SMD"
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //FileNameExtensionFilter filter = new FileNameExtensionFilter("SMD");
        //jc.addChoosableFileFilter(filter);
        int resultado = jcSMD.showOpenDialog(this);
        

        if(resultado == JFileChooser.APPROVE_OPTION){
            File f = jcSMD.getSelectedFile();
            String archivo = c.abrirSMD(f.getAbsolutePath());
            jTextArea1.setText(archivo);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    //Método para botón de "Guardar Texto"
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int resultado = jcText.showSaveDialog(this);

        if(resultado == JFileChooser.APPROVE_OPTION){
            String file = jcText.getSelectedFile().getName();
            if(!file.contains(".smde")){
                file = file + ".smde";

            }
            File f = jcText.getCurrentDirectory();
            System.out.println(f.getAbsolutePath());
            String result = c.crearArchivoTexto(file, jTextArea1.getText(), f.getAbsolutePath() +"/");
            System.out.println(result);
            JOptionPane.showMessageDialog(this, "¡Archivo '" +  result +"' guardado!", "Listo", JOptionPane.INFORMATION_MESSAGE);

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    //Método para botón "Compilar archivo externo"
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int resultado = jcText.showOpenDialog(this);

        if(resultado == JFileChooser.APPROVE_OPTION){
            File f = jcText.getSelectedFile();

            String result = c.compilar(f.getAbsolutePath());
            if(result.startsWith("OK")){
                String okMsg = result + "\n";
                String nombre = f.getName();
                nombre = nombre.substring(0, nombre.length()-4);
                JOptionPane.showMessageDialog(this, okMsg + "¡Archivo '" +  nombre +"' compilado!",
                        "Listo", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, result, "Error", JOptionPane.ERROR_MESSAGE);
            }
            

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    //Método para botón de salir
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
        
    }//GEN-LAST:event_jButton4ActionPerformed

    //Método para botón "Abrir texto"
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        int resultado = jcText.showOpenDialog(this);
        //FileNameExtensionFilter filter = new FileNameExtensionFilter("txt");
        //jc.setFileFilter(filter);

        if(resultado == JFileChooser.APPROVE_OPTION){
            File f = jcText.getSelectedFile();
            String archivo = c.abrirTexto(f.getAbsolutePath());
            jTextArea1.setText(archivo);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    //Método para botón "Guardar y compilar"
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        int resultado = jcText.showSaveDialog(this);

        if(resultado == JFileChooser.APPROVE_OPTION){
            String file = jcText.getSelectedFile().getName();
            if(!file.contains(".smde")){
                file = file + ".smde";

            }
            File f = jcText.getCurrentDirectory();
            System.out.println(f.getAbsolutePath());
            String result = c.crearArchivoTexto(file, jTextArea1.getText(), (f.getAbsolutePath() + "/"));
            System.out.println(result);

            String resultComp = c.compilar(f.getAbsolutePath() + "/" + result);
            if(resultComp.startsWith("OK")){
                String okMsg = resultComp + "\n";
                JOptionPane.showMessageDialog(this, okMsg + "¡Archivo '" +  result +"' guardado!",
                        "Listo", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, resultComp, "Error", JOptionPane.ERROR_MESSAGE);
            }
            
            

        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SMDEditMain().setVisible(true);

            }
        });


    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

}
